@model FrontEndDevExtreme.Models.WorkItemEditModel

@{
    ViewData["Title"] = "Cập nhật công việc";
}

<div class="bg-light p-4 rounded shadow-sm">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    @using (Html.BeginForm("Edit", "WorkItem", FormMethod.Post, new { id = "EditWorkItemForm" }))
    {
        @Html.HiddenFor(m => m.WorkItemID)

        <div class="row g-3">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.TaskName, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.TaskName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TaskName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Progress, new { @class = "form-label" })
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Progress, new { @class = "form-control", type = "number", min = "0", max = "100", aria_describedby = "progress-addon" })
                        <span class="input-group-text" id="progress-addon">%</span>
                    </div>
                    @Html.ValidationMessageFor(m => m.Progress, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.StartDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.EndDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Trạng thái</label>
                    <div>
                        @foreach (var item in new[] {
                    new { Text = "Chưa thực hiện", Value = 0 },
                    new { Text = "Đang thực hiện", Value = 1 },
                    new { Text = "Đã xong", Value = 2 }
                    })
                        {
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(m => m.Status, item.Value, new { @class = "form-check-input", id = $"Status-{item.Value}" })
                                <label class="form-check-label" for="Status-@item.Value">@item.Text</label>
                            </div>
                        }
                    </div>
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label class="form-label">Loại công việc</label>
                    <div>
                        @foreach (var type in new[] { "Research", ",Deploy", "Report" })
                        {
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(m => m.TaskType, type, new { @class = "form-check-input", id = $"TaskType-{type}" })
                                <label class="form-check-label" for="TaskType-@type">@type</label>
                            </div>
                        }
                        <div class="form-check form-check-inline ms-4">
                            @Html.CheckBoxFor(m => m.IsPinned, new { @class = "form-check-input", id = "IsPinned" })
                            @Html.LabelFor(m => m.IsPinned, new { @class = "form-check-label" })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.TaskType, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label class="form-label">Độ ưu tiên</label>
                    <div>
                        @foreach (var item in new[] {
                    new { Text = "Thấp", Value = 1 },
                    new { Text = "Trung bình", Value = 2 },
                    new { Text = "Cao", Value = 3 }
                    })
                        {
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(m => m.Priority, item.Value, new { @class = "form-check-input", id = $"Priority-{item.Value}" })
                                <label class="form-check-label" for="Priority-@item.Value">@item.Text</label>
                            </div>
                        }
                    </div>
                    @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.AssignerID, "Người giao việc", new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.AssignerID, new SelectList(ViewBag.Users, "UserID", "UserName", Model.AssignerID), "Chọn người giao việc", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.AssignerID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mt-4 g-3">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header fw-bold">Phòng ban nhận</div>
                    <div class="card-body">
                        <div class="input-group mb-2">
                            <select id="SelectedDepartmentID" class="form-select">
                                <option value="">Chọn phòng ban</option>
                                @foreach (var dept in ViewBag.Departments)
                                {
                                    <option value="@dept.DepartmentID">@dept.DepartmentName</option>
                                }
                            </select>
                            <button type="button" class="btn btn-outline-primary" onclick="addDepartment()">Thêm</button>
                        </div>
                        <ul id="department-list" class="list-unstyled mt-2 mb-0"></ul>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header fw-bold">Người nhận công việc</div>
                    <div class="card-body">
                        <div class="input-group mb-2">
                            <select id="SelectedUserID" class="form-select">
                                <option value="">Chọn người</option>
                                @foreach (var user in ViewBag.Users)
                                {
                                    <option value="@user.UserID">@user.UserName</option>
                                }
                            </select>
                            <button type="button" class="btn btn-outline-primary" onclick="addUser()">Thêm</button>
                        </div>
                        <ul id="user-list" class="list-unstyled mt-2 mb-0"></ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-4 d-flex justify-content-end gap-2">
            <button type="submit" class="btn btn-primary">Cập nhật</button>
            <a href="@Url.Action("Index", "WorkItem")" class="btn btn-secondary">Đóng</a>
            @using (Html.BeginForm("Delete", "WorkItem", FormMethod.Post, new { onsubmit = "return confirm('Bạn có chắc chắn muốn xóa công việc này?');", @class = "d-inline-block" }))
            {
                @Html.Hidden("id", Model.WorkItemID)
                <button type="submit" class="btn btn-danger">Xóa</button>
            }
        </div>
    }
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var selectedDepartments = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.DepartmentIDs ?? new List<int>()));
        var selectedUsers = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.UserIDs ?? new List<int>()));

        function addDepartment() {
            var selected = $("#SelectedDepartmentID").val();
            var text = $("#SelectedDepartmentID option:selected").text();
            if (selected && !selectedDepartments.includes(selected)) {
                selectedDepartments.push(selected);
                $("#department-list").append(
                    `<li class="list-group-item d-flex justify-content-between align-items-center" data-id="${selected}">${text} <button type="button" class="btn-close btn-sm" aria-label="Xóa" onclick="removeDepartment('${selected}');"></button><input type="hidden" name="DepartmentIDs" value="${selected}" /></li>`
                );
            }
            $("#SelectedDepartmentID").val(""); // Clear the dropdown after adding
        }

        function removeDepartment(id) {
            selectedDepartments = selectedDepartments.filter(x => x !== id);
            $(`#department-list li[data-id='${id}']`).remove();
        }

        function addUser() {
            var selected = $("#SelectedUserID").val();
            var text = $("#SelectedUserID option:selected").text();
            if (selected && !selectedUsers.includes(selected)) {
                selectedUsers.push(selected);
                $("#user-list").append(
                    `<li class="list-group-item d-flex justify-content-between align-items-center" data-id="${selected}">${text} <button type="button" class="btn-close btn-sm" aria-label="Xóa" onclick="removeUser('${selected}');"></button><input type="hidden" name="UserIDs" value="${selected}" /></li>`
                );
            }
            $("#SelectedUserID").val(""); // Clear the dropdown after adding
        }

        function removeUser(id) {
            selectedUsers = selectedUsers.filter(x => x !== id);
            $(`#user-list li[data-id='${id}']`).remove();
        }


        $(document).ready(function () {
            selectedDepartments.forEach(function (id) {
                var text = $(`#SelectedDepartmentID option[value='${id}']`).text();
                $("#department-list").append(
                    `<li class="list-group-item d-flex justify-content-between align-items-center" data-id="${id}">${text} <button type="button" class="btn-close btn-sm" aria-label="Xóa" onclick="removeDepartment('${id}');"></button><input type="hidden" name="DepartmentIDs" value="${id}" /></li>`
                );
            });

            selectedUsers.forEach(function (id) {
                var text = $(`#SelectedUserID option[value='${id}']`).text();
                $("#user-list").append(
                    `<li class="list-group-item d-flex justify-content-between align-items-center" data-id="${id}">${text} <button type="button" class="btn-close btn-sm" aria-label="Xóa" onclick="removeUser('${id}');"></button><input type="hidden" name="UserIDs" value="${id}" /></li>`
                );
            });


            updateProgressByStatus();
            updateStatusByProgress();
        });


        function updateStatusByProgress() {
            var progress = parseInt($("input[name='Progress']").val());

            if (isNaN(progress) || progress <= 0) {
                $("input[name='Status'][value='0']").prop("checked", true);
            } else if (progress >= 100) {
                $("input[name='Status'][value='2']").prop("checked", true);
            } else {
                $("input[name='Status'][value='1']").prop("checked", true);
            }
        }


        function updateProgressByStatus() {
            var status = $("input[name='Status']:checked").val();
            var $progress = $("input[name='Progress']");

            if (status === "0") {
                $progress.val(0);
                $progress.prop("readonly", false);
            } else if (status === "1") {
                $progress.prop("readonly", false);
            } else if (status === "2") {
                $progress.val(100);
                $progress.prop("readonly", true);
            }
        }

        $(document).ready(function () {

            $("input[name='Progress']").on('input', function () {
                updateStatusByProgress();
            });


            $("input[name='Status']").change(function () {
                updateProgressByStatus();
            });
        });
    </script>
}