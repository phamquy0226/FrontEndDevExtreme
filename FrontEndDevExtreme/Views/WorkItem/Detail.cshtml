@model FrontEndDevExtreme.Models.WorkItemDetailModel

@{
    ViewData["Title"] = "Chi tiết công việc";
}

<h2>@ViewData["Title"]</h2>

<div class="card p-3">
    <dl class="row">
        <dt class="col-sm-3">Tên công việc</dt>
        <dd class="col-sm-9">@Model.TaskName</dd>

        <dt class="col-sm-3">Trạng thái</dt>
        <dd class="col-sm-9">
            @{
                var statusText = Model.Status switch
                {
                    0 => "Chưa thực hiện",
                    1 => "Đang thực hiện",
                    2 => "Đã xong",
                    _ => "Không xác định"
                };
            }
            @statusText
        </dd>

        <dt class="col-sm-3">Tiến độ</dt>
        <dd class="col-sm-9">@Model.Progress%</dd>

        <dt class="col-sm-3">Loại công việc</dt>
        <dd class="col-sm-9">@Model.TaskType</dd>

        <dt class="col-sm-3">Độ ưu tiên</dt>
        <dd class="col-sm-9">
            @{
                var priorityText = Model.Priority switch
                {
                    1 => "Thấp",
                    2 => "Trung bình",
                    3 => "Cao",
                    _ => "Không xác định"
                };
                var priorityClass = Model.Priority switch
                {
                    1 => "badge bg-success text-white",
                    2 => "badge bg-warning text-dark",
                    3 => "badge bg-danger text-white",
                    _ => "badge bg-secondary"
                };
            }
            <span class="@priorityClass">@priorityText</span>
        </dd>

        <dt class="col-sm-3">Ghim</dt>
        <dd class="col-sm-9">@((Model.IsPinned) ? "Có" : "Không")</dd>

        <dt class="col-sm-3">Ngày bắt đầu</dt>
        <dd class="col-sm-9">@Model.StartDate.ToString("dd/MM/yyyy")</dd>

        <dt class="col-sm-3">Ngày kết thúc</dt>
        <dd class="col-sm-9">@Model.EndDate.ToString("dd/MM/yyyy")</dd>

        <dt class="col-sm-3">Người giao việc</dt>
        <dd class="col-sm-9">@Model.AssignerName</dd>

        <dt class="col-sm-3">Phòng ban nhận</dt>
        <dd class="col-sm-9">
            @foreach (var dept in Model.DepartmentList?.Split(',', StringSplitOptions.TrimEntries) ?? Enumerable.Empty<string>())
            {
                <div>@dept</div>
            }
        </dd>

        <dt class="col-sm-3">Người nhận</dt>
        <dd class="col-sm-9">
            @foreach (var user in Model.UserList?.Split(',', StringSplitOptions.TrimEntries) ?? Enumerable.Empty<string>())
            {
                <div>@user</div>
            }
        </dd>
    </dl>

    <a href="@Url.Action("Index", "WorkItem")" class="btn btn-secondary">Quay lại danh sách</a>
</div>

<hr />

<h4>Ghi chú</h4>

<!-- DevExtreme List để hiển thị ghi chú -->
@(Html.DevExtreme().List()
    .ID("noteList")
    .DataSource(Model.Notes.Select(note => new
    {
        ID = note.NoteID,
        Text = $"{note.CreatedDate:dd/MM/yyyy HH:mm}: {note.Content}"
    }))
    .DisplayExpr("Text")
    .KeyExpr("ID")
    .SelectionMode(ListSelectionMode.None)
    .ShowScrollbar(DevExtreme.AspNet.Mvc.ShowScrollbarMode.Always)
)

<!-- TextArea để người dùng nhập ghi chú mới -->
<div class="mt-3">
    @(Html.DevExtreme().TextArea()
        .ID("noteContent")
        .Height(120)
        .Placeholder("Thêm ghi chú mới..."))
</div>

<!-- Nút Thêm Ghi Chú -->
<div class="mt-2">
    @(Html.DevExtreme().Button()
        .Text("Thêm ghi chú")
        .Type(ButtonType.Success)
        .OnClick("addNote"))
</div>

@section Scripts {
    <script>
        // Hàm thêm ghi chú
        function addNote() {
            const content = $("#noteContent").dxTextArea("instance").option("value");
            if (!content || content.trim() === "") {
                DevExpress.ui.notify("Vui lòng nhập nội dung ghi chú", "warning", 2000);
                return;
            }

            // Gửi yêu cầu POST đến API
            $.post('@Url.Action("AddNote", "WorkItem")', {
                workItemId: @Model.WorkItemID,
                content: content
            }).done(function (res) {
                if (res.success) {
                    DevExpress.ui.notify("Đã thêm ghi chú", "success", 2000);

                    // Lấy ghi chú mới thêm từ phản hồi
                    var newNote = res.data;

                    // Lấy đối tượng dxList và cập nhật lại DataSource
                    var noteList = $("#noteList").dxList("instance");
                    var currentDataSource = noteList.option("dataSource");

                    // Thêm ghi chú mới vào đầu danh sách
                    currentDataSource.unshift(newNote);  // Thêm vào đầu danh sách

                    // Cập nhật lại DataSource của List để hiển thị ghi chú mới
                    noteList.option("dataSource", currentDataSource);

                    // Làm mới giao diện của List để hiển thị ghi chú mới
                    noteList.refresh();

                    // Xóa nội dung TextArea sau khi thêm ghi chú
                    $("#noteContent").dxTextArea("instance").option("value", "");
                } else {
                    DevExpress.ui.notify(res.message || "Thêm ghi chú thất bại", "error", 2000);
                }
            }).fail(function () {
                DevExpress.ui.notify("Lỗi khi gọi API", "error", 2000);
            });
        }
    </script>
}
