@model FrontEndDevExtreme.Models.WorkItemDetailModel

<div class="card">
    <div class="card-header">
        Ghi chú
    </div>
    <div class="card-body">
        <div id="notesList">
            @if (Model.Notes != null && Model.Notes.Any())
            {
                @foreach (var note in Model.Notes)
                {
                    <div class="note-item mb-2 p-2 border rounded">
                        <p><strong>Ngày tạo:</strong> @note.CreatedDate.ToString("dd/MM/yyyy HH:mm")</p>
                        <p>@note.Content</p>
                        <button class="btn btn-sm btn-danger delete-note-btn" data-note-id="@note.NoteID" data-workitem-id="@Model.WorkItemID">Xóa</button>
                    </div>
                }
            }
            else
            {
                <p>Không có ghi chú nào.</p>
            }
        </div>
        <div class="form-group mt-3">
            <textarea id="newNoteContent" class="form-control" placeholder="Nhập ghi chú mới..."></textarea>
        </div>
        <button id="addNoteBtn" class="btn btn-primary">Thêm ghi chú</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        var workItemId = @Model.WorkItemID; // Lấy WorkItemID từ model

        // Hàm để thêm ghi chú bằng AJAX
        $("#addNoteBtn").click(function () {
            var noteContent = $("#newNoteContent").val();
            if (noteContent.trim() !== "") {
                $.ajax({
                    url: '/api/workitems/' + workItemId + '/notes', // Sử dụng route có workItemId
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        workItemId: workItemId, // Đã có trong biến workItemId
                        content: noteContent
                    }),
                    success: function (response) {
                        if (response.success) {
                            // Thêm ghi chú mới vào danh sách hiển thị
                            var newNoteHtml = `<div class="note-item mb-2 p-2 border rounded">
                                                <p><strong>Ngày tạo:</strong> ${formatDate(response.data.createdDate)}</p>
                                                <p>${response.data.content}</p>
                                                <button class="btn btn-sm btn-danger delete-note-btn" data-note-id="${response.data.noteID}" data-workitem-id="${workItemId}">Xóa</button>
                                              </div>`;
                            $("#notesList").append(newNoteHtml);
                            $("#newNoteContent").val(""); // Xóa nội dung textarea
                            toastr.success("Thêm ghi chú thành công!"); // Sử dụng thư viện toastr để hiển thị thông báo
                        } else {
                            toastr.error("Lỗi: " + response.message);
                        }
                    },
                    error: function () {
                        toastr.error("Lỗi khi thêm ghi chú.");
                    }
                });
            } else {
                toastr.warning("Vui lòng nhập nội dung ghi chú.");
            }
        });

        // Hàm để xóa ghi chú bằng AJAX
        $(document).on('click', '.delete-note-btn', function () {
            var noteId = $(this).data('note-id');
             var workItemId = $(this).data('workitem-id'); // Get workItemId from the button
            var noteItem = $(this).closest('.note-item');

            $.ajax({
                url: '/api/workitems/' + workItemId + '/notes/' + noteId, // Use the correct route
                type: 'DELETE',
                success: function (response) {
                    if (response.success) {
                        noteItem.remove(); // Xóa phần tử ghi chú khỏi DOM
                        toastr.success("Xóa ghi chú thành công!");
                    } else {
                        toastr.error("Lỗi: " + response.message);
                    }
                },
                error: function () {
                    toastr.error("Lỗi khi xóa ghi chú.");
                }
            });
        });

        function formatDate(dateString) {
            if (!dateString) return '';
            var date = new Date(dateString);
            var day = date.getDate().toString().padStart(2, '0');
            var month = (date.getMonth() + 1).toString().padStart(2, '0');
            var year = date.getFullYear();
            var hours = date.getHours().toString().padStart(2, '0');
            var minutes = date.getMinutes().toString().padStart(2, '0');
            return day + '/' + month + '/' + year + ' ' + hours + ':' + minutes;
        }
    });
</script>
