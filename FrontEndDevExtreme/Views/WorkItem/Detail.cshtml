@model FrontEndDevExtreme.Models.WorkItemDetailModel

@{
    ViewData["Title"] = "Chi tiết công việc";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <!-- Cột trái: Thông tin công việc -->
    <div class="col-md-6">
        <div class="card p-3">
            <dl class="row">
                <dt class="col-sm-4">Tên công việc</dt>
                <dd class="col-sm-8">@Model.TaskName</dd>

                <dt class="col-sm-4">Trạng thái</dt>
                <dd class="col-sm-8">
                    @{
                        var statusText = Model.Status switch
                        {
                            0 => "Chưa thực hiện",
                            1 => "Đang thực hiện",
                            2 => "Đã xong",
                            _ => "Không xác định"
                        };
                    }
                    @statusText
                </dd>

                <dt class="col-sm-4">Tiến độ</dt>
                <dd class="col-sm-8">@Model.Progress%</dd>

                <dt class="col-sm-4">Loại công việc</dt>
                <dd class="col-sm-8">@Model.TaskType</dd>

                <dt class="col-sm-4">Độ ưu tiên</dt>
                <dd class="col-sm-8">
                    @{
                        var priorityText = Model.Priority switch
                        {
                            1 => "Thấp",
                            2 => "Trung bình",
                            3 => "Cao",
                            _ => "Không xác định"
                        };
                        var priorityClass = Model.Priority switch
                        {
                            1 => "badge bg-success text-white",
                            2 => "badge bg-warning text-dark",
                            3 => "badge bg-danger text-white",
                            _ => "badge bg-secondary"
                        };
                    }
                    <span class="@priorityClass">@priorityText</span>
                </dd>

                <dt class="col-sm-4">Ghim</dt>
                <dd class="col-sm-8">@((Model.IsPinned) ? "Có" : "Không")</dd>

                <dt class="col-sm-4">Ngày bắt đầu</dt>
                <dd class="col-sm-8">@Model.StartDate.ToString("dd/MM/yyyy")</dd>

                <dt class="col-sm-4">Ngày kết thúc</dt>
                <dd class="col-sm-8">@Model.EndDate.ToString("dd/MM/yyyy")</dd>

                <dt class="col-sm-4">Người giao việc</dt>
                <dd class="col-sm-8">@Model.AssignerName</dd>

                <dt class="col-sm-4">Phòng ban nhận</dt>
                <dd class="col-sm-8">
                    @foreach (var dept in Model.DepartmentList?.Split(',', StringSplitOptions.TrimEntries) ?? Enumerable.Empty<string>())
                    {
                        <div>@dept</div>
                    }
                </dd>

                <dt class="col-sm-4">Người nhận</dt>
                <dd class="col-sm-8">
                    @foreach (var user in Model.UserList?.Split(',', StringSplitOptions.TrimEntries) ?? Enumerable.Empty<string>())
                    {
                        <div>@user</div>
                    }
                </dd>
            </dl>

            <a href="@Url.Action("Index", "WorkItem")" class="btn btn-secondary mt-2">Đóng</a>
        </div>
    </div>

    <!-- Cột phải: Ghi chú -->
    <div class="col-md-6">
        <div class="card p-3">
            <h4>Ghi chú</h4>

            @(Html.DevExtreme().List()
                .ID("noteList")
                .DataSource(Model.Notes
                .OrderByDescending(n => n.CreatedDate)
                .Select(note => new
                {
                    ID = note.NoteID,
                    Text = $"{note.CreatedDate:dd/MM/yyyy HH:mm}: {note.Content}"
                }))
                .DisplayExpr("Text")
                .KeyExpr("ID")
                .SelectionMode(ListSelectionMode.None)
                .ShowScrollbar(ShowScrollbarMode.Always)
                .Height(200)
                )

            <div class="mt-3">
                @(Html.DevExtreme().TextArea()
                    .ID("noteContent")
                    .Height(120)
                    .Placeholder("Thêm ghi chú mới..."))
            </div>

            <div class="mt-2">
                @(Html.DevExtreme().Button()
                    .ID("btnAddNote")
                    .Text("Thêm ghi chú")
                    .Type(ButtonType.Success)
                    .OnClick("addNote"))
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addNote() {
            const $textArea = $("#noteContent").dxTextArea("instance");
            const content = $textArea.option("value")?.trim();

            if (!content) {
                DevExpress.ui.notify("Vui lòng nhập nội dung ghi chú", "warning", 2000);
                return;
            }

            $textArea.option("disabled", true);

            $.ajax({
                url: '@Url.Action("AddNote", "WorkItem")',
                method: "POST",
                data: {
                    workItemId: @Model.WorkItemID,
                    content: content
                },
                success: function (res) {
                    if (res.success) {
                        DevExpress.ui.notify("Đã thêm ghi chú", "success", 2000);
                        window.location.reload();
                    } else {
                        DevExpress.ui.notify(res.message || "Thêm ghi chú thất bại", "error", 2000);
                    }
                },
                error: function () {
                    DevExpress.ui.notify("Lỗi khi gọi API", "error", 2000);
                },
                complete: function () {
                    $textArea.option("disabled", false);
                }
            });
        }
    </script>
}
