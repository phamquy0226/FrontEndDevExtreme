@model List<FrontEndDevExtreme.Models.WorkItemViewModel>
@{
    ViewData["Title"] = "Danh sách công việc";
    var currentQuery = Context.Request.Query;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    .card {
        border-radius: 0.75rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: none;
        margin-bottom: 1.5rem;
    }

    .card-header {
        background-color: rgba(0, 0, 0, 0.03);
        border-bottom: none;
        padding: 1rem 1.25rem;
        border-radius: 0.75rem 0.75rem 0 0 !important;
    }

    .btn {
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        font-weight: 500;
        transition: all 0.2s;
    }

    .btn-success {
        background-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

    .page-header {
        background-color: #f8f9fa;
        padding: 1.5rem 0;
        margin-bottom: 1.5rem;
        border-radius: 0.75rem;
    }

    .form-control, .dx-texteditor-input {
        border-radius: 0.5rem;
        padding: 0.625rem 1rem;
    }

    .dx-widget.dx-button {
        border-radius: 0.5rem;
    }

    #workItemGrid {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .status-badge {
        padding: 0.35em 0.65em;
        font-size: 0.75em;
        font-weight: 500;
        border-radius: 20px;
    }

    .filter-container {
        background-color: #f8f9fa;
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .action-button {
        padding: 0.25rem 0.5rem;
        margin-right: 0.25rem;
    }

    .task-name {
        font-weight: 600;
        color: #0d6efd;
    }

        .task-name.completed {
            text-decoration: line-through;
            color: #6c757d;
        }

    .progress {
        height: 12px;
        border-radius: 20px;
        background-color: #e9ecef;
    }

    .progress-bar {
        border-radius: 20px;
    }

    .create-button {
        padding: 0.75rem 1.25rem;
        font-weight: 600;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .floating-action-button {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        z-index: 1030;
        transition: all 0.3s;
    }

        .floating-action-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
        }

    .animate-in {
        animation: fadeInUp 0.4s ease-out;
    }

    @@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

</style>

<div class="container-fluid px-4 animate-in">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold">@ViewData["Title"]</h2>
       
        </div>
        <button type="button" id="btnOpenCreatePopup" class="btn btn-success create-button">
            <i class="bi bi-plus-circle"></i> Tạo công việc mới
        </button>
    </div>

    <!-- Filter Card -->
    <div class="card animate-in" style="animation-delay: 0.1s">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="fw-bold mb-0">
                    <i class="bi bi-funnel me-2"></i> Bộ lọc tìm kiếm
                </h5>
            </div>
        </div>
        <div id="filterCollapse" class="collapse show">
            <div class="card-body">
                <form id="Filter" method="get">
                    <div class="row g-3">
                        <!-- Column 1 -->
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">Tên công việc</label>
                                @(Html.DevExtreme().TextBox()
                                    .Name("SearchTaskName")
                                    .Placeholder("Nhập tên công việc cần tìm")
                                    .Value(currentQuery["SearchTaskName"].ToString())
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Người thực hiện</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("UserName")
                                    .DataSource(ViewBag.Assigned)
                                    .ValueExpr("UserName")
                                    .DisplayExpr("UserName")
                                    .Placeholder("Chọn người thực hiện")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["UserName"].ToString()))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Người giao</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("AssignerName")
                                    .DataSource(ViewBag.Assigner)
                                    .ValueExpr("UserName")
                                    .DisplayExpr("UserName")
                                    .Placeholder("Chọn người giao")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["AssignerName"].ToString()))
                            </div>
                        </div>

                        <!-- Column 2 -->
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">Trạng thái</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("Status")
                                    .DataSource(new[] {
                                new { ID = "0", Name = "Chưa thực hiện" },
                                new { ID = "1", Name = "Đang thực hiện" },
                                new { ID = "2", Name = "Đã xong" }
                                })
                                    .ValueExpr("ID")
                                    .DisplayExpr("Name")
                                    .Placeholder("Chọn trạng thái")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["Status"].ToString()))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Độ ưu tiên</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("Priority")
                                    .DataSource(new[] {
                                new { ID = "1", Name = "Thấp" },
                                new { ID = "2", Name = "Trung bình" },
                                new { ID = "3", Name = "Cao" }
                                })
                                    .ValueExpr("ID")
                                    .DisplayExpr("Name")
                                    .Placeholder("Chọn độ ưu tiên")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["Priority"].ToString()))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Đã ghim</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("IsPinned")
                                    .DataSource(new[] {
                                new { ID = "true", Name = "Có" },
                                new { ID = "false", Name = "Không" }
                                })
                                    .ValueExpr("ID")
                                    .DisplayExpr("Name")
                                    .Placeholder("Chọn")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["IsPinned"].ToString()))
                            </div>
                        </div>

                        <!-- Column 3 -->
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label class="form-label">Từ ngày</label>
                                @(Html.DevExtreme().DateBox()
                                    .Name("StartDateFrom")
                                    .Placeholder("Chọn ngày bắt đầu")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .DisplayFormat("dd/MM/yyyy")
                                    .Value(currentQuery["StartDateFrom"].ToString()))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Đến ngày</label>
                                @(Html.DevExtreme().DateBox()
                                    .Name("EndDateTo")
                                    .Placeholder("Chọn ngày kết thúc")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .DisplayFormat("dd/MM/yyyy")
                                    .Value(currentQuery["EndDateTo"].ToString()))
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Phòng ban</label>
                                @(Html.DevExtreme().SelectBox()
                                    .Name("DepartmentID")
                                    .DataSource(ViewBag.Departments)
                                    .ValueExpr("DepartmentID")
                                    .DisplayExpr("DepartmentName")
                                    .Placeholder("Chọn phòng ban")
                                    .ShowClearButton(true)
                                    .StylingMode(EditorStylingMode.Filled)
                                    .Value(currentQuery["DepartmentID"].ToString()))
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-2 mt-3">
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search me-1"></i> Tìm kiếm
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Grid Card -->
    <div class="card animate-in" style="animation-delay: 0.2s">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="fw-bold mb-0">
                    <i class="bi bi-list-task me-2"></i> Danh sách công việc
                </h5>
            </div>
        </div>
        <div class="card-body p-0">
            <div id="gridContainer">
                @(Html.DevExtreme().DataGrid<FrontEndDevExtreme.Models.WorkItemViewModel>()
                        .ID("workItemGrid")
                        .DataSource(Model)
                        .ShowBorders(true)
                        .RowAlternationEnabled(true)
                        .WordWrapEnabled(true)
                        .ColumnAutoWidth(true)
                        .ColumnMinWidth(100)
                        .HoverStateEnabled(true)
                        .Paging(p => p.PageSize(1000))
                        .Pager(p =>
                        {
                            p.ShowPageSizeSelector(true)
                        .AllowedPageSizes(new[] { 500, 1000, 2000, 5000 })
                        .ShowInfo(true)
                        .ShowNavigationButtons(true);
                        })
                        .LoadPanel(p => p
                        .Enabled(true)
                        .Text("Đang tải dữ liệu...")
                        .ShowIndicator(true)
                        .ShowPane(true)
                        )
                        .Columns(columns =>
                        {
                            columns.Add()
                        .Caption("")
                        .Width(120)
                        .AllowFiltering(false)
                        .AllowSorting(false)
                        .CellTemplate(@<text>
                    <div class="d-flex justify-content-start">
                        <div class="btn-group">
                     

                            <button type="button"
                                    class="btn btn-sm btn-outline-warning action-button"
                                    data-bs-toggle="tooltip" data-bs-placement="top" title="Chỉnh sửa"
                                    onclick="location.href='@Url.Action("Edit", "WorkItem", new { id = "__id__" })'.replace('__id__', '<%= data.WorkItemID %>')">
                                <i class="bi bi-pencil"></i>
                            </button>

                            <% if (data.Status !== 2) { %>
                            <form action="@Url.Action("MarkAsCompleted", "WorkItem")" method="post"
                                  style="display:inline;" onsubmit="return confirm('Xác nhận đánh dấu hoàn tất?');">
                                <input type="hidden" name="id" value="<%= data.WorkItemID %>" />
                                <button type="submit"
                                        class="btn btn-sm btn-outline-success action-button"
                                        data-bs-toggle="tooltip" data-bs-placement="top" title="Hoàn tất">
                                    <i class="bi bi-check-circle"></i>
                                </button>
                            </form>
                            <% } %>

                            <form action="@Url.Action("Delete", "WorkItem")" method="post"
                                  onsubmit="return confirm('Bạn có chắc chắn muốn xóa công việc này?');" style="display:inline;">
                                <input type="hidden" name="id" value="<%= data.WorkItemID %>" />
                                <button type="submit"
                                        class="btn btn-sm btn-outline-danger action-button"
                                        data-bs-toggle="tooltip" data-bs-placement="top" title="Xóa">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                </text>);

                            columns.Add()
                        .Caption("Thông tin công việc")
                        .MinWidth(300)
                        .CellTemplate(@<text>
                    <div class="task-card">
                        <div class="mb-2">
                            <div class="d-flex align-items-center">
                                <% if (data.IsPinned === true) { %>
                                <span class="me-2" title="Đã ghim"><i class="bi bi-pin-angle-fill text-danger"></i></span>
                                <% } %>
                                <a href="/WorkItem/Detail/<%= data.WorkItemID %>"
                                   class="task-name <%= data.Status === 2 ? 'completed' : '' %>">
                                    <%= data.TaskName %>
                                </a>

                            </div>
                        </div>

                        <div class="mb-2">
                            <div class="d-flex flex-wrap gap-1">
                                <% if (data.Priority === 1) { %>
                                <span class="badge bg-success rounded-pill">Thấp</span>
                                <% } else if (data.Priority === 2) { %>
                                <span class="badge bg-warning text-dark rounded-pill">Trung bình</span>
                                <% } else if (data.Priority === 3) { %>
                                <span class="badge bg-danger rounded-pill">Cao</span>
                                <% } %>

                                <% if (data.Status === 0) { %>
                                <span class="badge bg-secondary rounded-pill">Chưa thực hiện</span>
                                <% } else if (data.Status === 1) { %>
                                <span class="badge bg-info text-dark rounded-pill">Đang thực hiện</span>
                                <% } else if (data.Status === 2) { %>
                                <span class="badge bg-success rounded-pill">Đã xong</span>
                                <% } %>

                                <% if (data.TaskType) { %>
                                <span class="badge bg-dark text-white rounded-pill"><%= data.TaskType %></span>
                                <% } %>
                            </div>
                        </div>

                        <% if (data.EndDate) {
                        var end = new Date(data.EndDate);
                        var now = new Date();
                        var diffMs = end - now;
                        var absMs = Math.abs(diffMs);

                        var days = Math.floor(absMs / (1000 * 60 * 60 * 24));
                        var hours = Math.floor((absMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        var minutes = Math.floor((absMs % (1000 * 60 * 60)) / (1000 * 60));

                        if (diffMs >= 0) { %>
                        <div class="d-flex align-items-center text-primary">
                            <i class="bi bi-clock me-1"></i>
                            <small><strong>Còn lại: <%= days %> ngày <%= hours %> giờ <%= minutes %> phút</strong></small>
                        </div>
                        <% } else { %>
                        <div class="d-flex align-items-center text-danger">
                            <i class="bi bi-exclamation-circle me-1"></i>
                            <small><strong>Đã trễ: <%= days %> ngày <%= hours %> giờ <%= minutes %> phút</strong></small>
                        </div>
                        <% }
                        } %>
                    </div>
                </text>);

                            columns.Add()
                        .Caption("Thời gian & Tiến độ")
                        .CellTemplate(@<text>
                    <div>
                        <% if (data.StartDate || data.EndDate) { %>
                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-calendar-event me-2 text-muted"></i>
                            <div>
                                <strong>
                                    <%= data.StartDate ? new Date(data.StartDate).toLocaleDateString('vi-VN') : '' %>
                                    <i class="bi bi-arrow-right mx-1"></i>
                                    <%= data.EndDate ? new Date(data.EndDate).toLocaleDateString('vi-VN') : '' %>
                                </strong>
                            </div>
                        </div>
                        <% } %>

                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-graph-up me-2 text-muted"></i>
                            <div class="flex-grow-1">
                                <div class="progress">
                                    <div class="progress-bar <%= data.Progress < 50 ? 'bg-warning' : 'bg-success' %>" role="progressbar"
                                         style="width: <%= data.Progress %>%;"
                                         aria-valuenow="<%= data.Progress %>" aria-valuemin="0" aria-valuemax="100">
                                    </div>
                                </div>
                                <div class="text-end mt-1">
                                    <small class="text-muted"><%= data.Progress %>%</small>
                                </div>
                            </div>
                        </div>

                        <% if (data.DateCreate) { %>
                        <div class="d-flex align-items-center">
                            <i class="bi bi-clock-history me-2 text-muted"></i>
                            <small class="text-muted">
                                Tạo lúc: <%= new Date(data.DateCreate).toLocaleString('vi-VN') %>
                            </small>
                        </div>
                        <% } %>
                    </div>
                </text>);

                            columns.Add()
                        .Caption("Người giao")
                        .CellTemplate(@<text>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-person-check me-2 text-muted"></i>
                        <strong><%= data.AssignerName %></strong>
                    </div>
                </text>);

                            columns.Add()
                        .Caption("Người nhận")
                        .CellTemplate(@<text>
                    <% if (data.UserList) { %>
                    <div class="d-flex align-items-start">
                        <i class="bi bi-people me-2 text-muted"></i>
                        <div>
                            <% data.UserList.split(',').forEach(function(user) { %>
                            <div class="mb-1">
                                <span class="badge bg-light text-dark">
                                    <i class="bi bi-person me-1"></i>
                                    <%= user.trim() %>
                                </span>
                            </div>
                            <% }); %>
                        </div>
                    </div>
                    <% } %>
                </text>);


                            columns.Add()
                        .Caption("Phòng ban")
                        .CellTemplate(@<text>
                    <% if (data.DepartmentList) { %>
                    <div class="d-flex align-items-start">
                        <i class="bi bi-building me-2 text-muted"></i>
                        <div>
                            <% data.DepartmentList.split(',').forEach(function(dept) { %>
                            <div class="mb-1">
                                <span class="badge bg-secondary">
                                    <%= dept.trim() %>
                                </span>
                            </div>
                            <% }); %>
                        </div>
                    </div>
                    <% } %>
                </text>);

                            columns.Add()
                        .Caption("Ghi chú")
                        .Width(120)
                        .CellTemplate(@<text>
                    <button type="button" class="btn btn-sm btn-outline-info w-100 btn-open-note" data-id="<%= data.WorkItemID %>">
                        <i class="bi bi-chat-left-text me-1"></i>
                        <span class="badge bg-secondary"><%= data.NoteCount %></span>
                    </button>
                </text>);
                        }))
            </div>
        </div>
    </div>
</div>

<!-- Floating action button for mobile -->
<button type="button" id="mobileCreateBtn" class="floating-action-button btn btn-success d-md-none">
    <i class="bi bi-plus fs-4"></i>
</button>

<!-- Popups -->
<div id="popupCreateWorkItem"></div>
<div id="popupNote"></div>

@section Scripts {
    <script src="~/js/create-workitem.js"></script>

    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Create work item popup
        $(function () {
            const popup = $("#popupCreateWorkItem").dxPopup({
                title: "Tạo công việc mới",
                width: function() {
                    return window.innerWidth > 768 ? "50%" : "95%";
                },
                height: "90%",
                visible: false,
                showCloseButton: true,
                showTitle: true,
                dragEnabled: true,
                hideOnOutsideClick: true,
                position: {
                    my: "center",
                    at: "center",
                    of: window
                },
                animation: {
                    show: {
                        type: "slide",
                        duration: 300,
                        from: { opacity: 0 },
                        to: { opacity: 1 }
                    },
                    hide: {
                        type: "fade",
                        duration: 300
                    }
                },
                contentTemplate: function (contentElement) {
                    contentElement.append(`
                        <div class="d-flex justify-content-center align-items-center p-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <span class="ms-3">Đang tải...</span>
                        </div>
                    `);

                    $.get('@Url.Action("CreatePopUp", "WorkItem")', function (html) {
                        contentElement.html(html);
                        initWorkItemCreate();
                    });
                }
            }).dxPopup("instance");

            $("#btnOpenCreatePopup, #mobileCreateBtn").on("click", function (e) {
                e.preventDefault();
                popup.show();
            });

            // Expand/Collapse buttons
            $("#btnExpandAll").on("click", function() {
                $(".task-card").addClass("expanded");
            });

            $("#btnCollapseAll").on("click", function() {
                $(".task-card").removeClass("expanded");
            });
        });
    </script>

    <script>
        let popupNote;

        $(function () {
            popupNote = $("#popupNote").dxPopup({
                title: "Ghi chú công việc",
                width: function() {
                    return window.innerWidth > 768 ? "50%" : "95%";
                },
                height: "90%",
                visible: false,
                showCloseButton: true,
                showTitle: true,
                dragEnabled: true,
                hideOnOutsideClick: true,
                position: {
                    my: "center",
                    at: "center",
                    of: window
                },
                animation: {
                    show: {
                        type: "slide",
                        duration: 300,
                        from: { opacity: 0 },
                        to: { opacity: 1 }
                    },
                    hide: {
                        type: "fade",
                        duration: 300
                    }
                },
                contentTemplate: function (contentElement) {
                    contentElement.append(`
                        <div id="popupNoteContent">
                            <div class="d-flex justify-content-center align-items-center p-5">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Đang tải...</span>
                                </div>
                                <span class="ms-3">Đang tải ghi chú...</span>
                            </div>
                        </div>
                    `);
                },
                onShown: function () {
                    const container = $("#popupNoteContent");

                    if (popupNote._workItemId) {
                        $.get('@Url.Action("NotePartial", "WorkItem")', { workItemId: popupNote._workItemId }, function (html) {
                            container.html(html);
                            initNotePopup();

                            // Style note containers if needed
                            $(".note-container").addClass("border rounded p-3 mb-3");
                            $(".note-form").addClass("bg-light p-3 rounded border");
                        }).fail(function () {
                            container.html(`
                                <div class="alert alert-danger" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                    Không thể tải ghi chú. Vui lòng thử lại sau.
                                </div>
                            `);
                        });
                    } else {
                        container.html(`
                            <div class="alert alert-warning" role="alert">
                                <i class="bi bi-info-circle-fill me-2"></i>
                                Không có công việc nào được chọn.
                            </div>
                        `);
                    }
                },
                onHidden: function () {
                    popupNote._workItemId = undefined;
                    $("#popupNoteContent").empty();
                }
            }).dxPopup("instance");

            // Open note popup when clicking on note button
            $(document).on("click", ".btn-open-note", function (e) {
                e.preventDefault();
                const workItemId = $(this).data("id");
                popupNote._workItemId = workItemId;
                popupNote.show();
            });
        });
    </script>

    <script>
        const addNoteUrl = '@Url.Action("AddNote", "WorkItem")';
        const notePartialUrl = '@Url.Action("NotePartial", "WorkItem")';

        // Function to enhance notes.js functionality
        function enhanceNoteUI() {
            // Add animation to notes
            $(".note-item").addClass("animate-in");

            // Style note form
            $(".note-form textarea").addClass("form-control");
            $(".note-form button").addClass("btn btn-primary");

            // Add hover effect to notes
            $(".note-item").hover(
                function() { $(this).addClass("shadow-sm"); },
                function() { $(this).removeClass("shadow-sm"); }
            );
        }

        // Handle responsive layout changes
        $(window).on('resize', function() {
            if (window.innerWidth < 768) {
                $("#workItemGrid").addClass("dx-datagrid-compact");
            } else {
                $("#workItemGrid").removeClass("dx-datagrid-compact");
            }
        }).trigger('resize');

        // Initialize filter collapse state from localStorage
        $(document).ready(function() {
            const filterState = localStorage.getItem('filterCollapseState');

            if (filterState === 'collapsed') {
                $("#filterCollapse").removeClass('show');
            }

            // Save filter collapse state
            $("#filterCollapse").on('hidden.bs.collapse shown.bs.collapse', function() {
                const isCollapsed = !$(this).hasClass('show');
                localStorage.setItem('filterCollapseState', isCollapsed ? 'collapsed' : 'expanded');
            });

            // Initialize any enhanced UI elements
            enhanceDataGrid();
        });

        // Enhance DevExtreme DataGrid appearance
        function enhanceDataGrid() {
            // Add custom classes to DevExtreme elements
            $(".dx-datagrid-headers").addClass("bg-light");
            $(".dx-datagrid-rowsview .dx-row-alt").addClass("bg-light-subtle");

            // Fix mobile view issues
            if (window.innerWidth < 768) {
                $(".dx-datagrid-table").addClass("table-responsive");
            }

            // Make rows hoverable
            $(".dx-data-row").hover(
                function() { $(this).addClass("bg-light"); },
                function() { $(this).removeClass("bg-light"); }
            );
        }
    </script>

    <script src="~/js/note.js"></script>
}